{"version":3,"file":"index.umd.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\ntype State = { [s: string]: any };\nconst { useState } = React;\nexport const useForm = (\n  initialState: State = {},\n): [State, (e: React.SyntheticEvent) => void] => {\n  const [state, setState] = useState(initialState);\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    const target = e.target as typeof e.target & {\n      [s: string]: string;\n    };\n\n    const { name } = target;\n    const newState =\n      e.type === 'reset'\n        ? () => initialState\n        : (state: State) => ({\n            ...state,\n            [name]: target.type === 'checkbox' ? target.checked : target.value,\n          });\n\n    setState(newState);\n  };\n\n  return [state, handleChange];\n};\n\nexport type FormProps = {\n  initialState: State;\n  onSubmit: (state: State) => void;\n  children?: React.ReactNode;\n} & React.PropsWithoutRef<JSX.IntrinsicElements['form']>;\n\nexport type Ref = HTMLFormElement;\n\ntype CloneFunc = (child: React.ReactNode) => React.ReactNode;\ntype CloneFuncType = 'value' | 'checked';\ntype Cloner = (type: CloneFuncType) => CloneFunc;\ntype CloneTypes = { [s: string]: CloneFunc };\n\nconst CleanForm = React.forwardRef<Ref, FormProps>(\n  ({ initialState = {}, onSubmit = () => {}, children, ...props }, ref) => {\n    const [state, handleChange] = useForm(initialState);\n\n    const cloner: Cloner = type => child => {\n      const defaultFormValues = {\n        value: '',\n        checked: false,\n        radio: false,\n      };\n\n      return child && (child as any).props\n        ? React.cloneElement(child as any, {\n            [type]: state.hasOwnProperty((child as any).props.name)\n              ? state[(child as any).props.name]\n              : (child as any).props[type]\n              ? (child as any).props[type]\n              : defaultFormValues[type],\n            onChange: handleChange,\n            children: React.Children.map(\n              (child as any).props.children,\n              deepMap,\n            ),\n          })\n        : child;\n    };\n\n    const cloneTypes: CloneTypes = {\n      default: cloner('value'),\n      checkbox: cloner('checked'),\n      radio: (child: React.ReactNode): React.ReactNode => {\n        return (child as any).props\n          ? React.cloneElement(child as any, {\n              checked:\n                (child as any).props.value === state[(child as any).props.name],\n              onChange: handleChange,\n              children: React.Children.map(\n                (child as any).props.children,\n                deepMap,\n              ),\n            })\n          : child;\n      },\n    };\n\n    const deepMap = (child: React.ReactNode): React.ReactNode => {\n      const type = child && (child as any).props && (child as any).props.type;\n      return cloneTypes[type]\n        ? cloneTypes[type](child)\n        : cloneTypes.default(child);\n    };\n\n    const newChildren = React.Children.map(children, deepMap);\n\n    return (\n      <form\n        {...props}\n        ref={ref}\n        onSubmit={e => {\n          if (e) e.preventDefault();\n          onSubmit(state);\n        }}\n        onReset={handleChange}\n      >\n        {newChildren}\n      </form>\n    );\n  },\n);\n\nexport default CleanForm;\n"],"names":["useState","useForm","initialState","e","target","setState","type","state","Object","name","checked","value","CleanForm","React","ref$1","ref","cloner","child","props","hasOwnProperty","radio","onChange","handleChange","children","map","deepMap","cloneTypes","default","checkbox","newChildren","onSubmit","preventDefault","onReset"],"mappings":"uNAEQA,iBACKC,WACXC,kBAAsB,UAEIF,EAASE,gBAmB5B,eAjBeC,OACdC,EAASD,EAAEC,gBAajBC,EAPa,UAAXF,EAAEG,uBACQJ,YACLK,gBAAkBC,iBACdD,UACFE,GAAuB,aAAhBL,EAAOE,KAAsBF,EAAOM,QAAUN,EAAOO,eAsBnEC,EAAYC,sBACfC,EAAgEC,uCAA/C,2OACcd,EAAQC,iBAEhCc,WAAiBV,mBAAQW,gBAOtBA,GAAUA,EAAcC,MAC3BL,eAAmBI,MAAc,IAC9BX,GAAOC,EAAMY,eAAgBF,EAAcC,MAAMT,MAC9CF,EAAOU,EAAcC,MAAMT,MAC1BQ,EAAcC,MAAMZ,GACpBW,EAAcC,MAAMZ,GAXL,CACxBK,MAAO,GACPD,SAAS,EACTU,OAAO,GASmBd,KACtBe,SAAUC,IACVC,SAAUV,WAAeW,IACtBP,EAAcC,MAAMK,SACrBE,OAGJR,IAGAS,EAAyB,CAC7BC,QAASX,EAAO,SAChBY,SAAUZ,EAAO,WACjBI,eAAQH,UACEA,EAAcC,MAClBL,eAAmBI,EAAc,CAC/BP,QACGO,EAAcC,MAAMP,QAAUJ,EAAOU,EAAcC,MAAMT,MAC5DY,SAAUC,EACVC,SAAUV,WAAeW,IACtBP,EAAcC,MAAMK,SACrBE,KAGJR,IAIFQ,WAAWR,OACTX,EAAOW,GAAUA,EAAcC,OAAUD,EAAcC,MAAMZ,YAC5DoB,EAAWpB,GACdoB,EAAWpB,GAAMW,GACjBS,EAAWC,QAAQV,IAGnBY,EAAchB,WAAeW,IAAID,EAAUE,UAG/CZ,wCACMK,GACJH,IAAKA,EACLe,kBAAU3B,GACJA,GAAGA,EAAE4B,iBACTD,EAASvB,IAEXyB,QAASV,IAERO"}